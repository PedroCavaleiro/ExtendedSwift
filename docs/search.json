{"Structs/ScrollOffsetPreferenceKey.html#/s:13ExtendedSwift25ScrollOffsetPreferenceKeyV12defaultValue14CoreFoundation7CGFloatVvpZ":{"name":"defaultValue","abstract":"<p>The type of value that this preference key holds, which is a CGFloat representing the scroll offset.</p>","parent_name":"ScrollOffsetPreferenceKey"},"Structs/ScrollOffsetPreferenceKey.html#/s:13ExtendedSwift25ScrollOffsetPreferenceKeyV6reduce5value9nextValuey14CoreFoundation7CGFloatVz_AIyXEtFZ":{"name":"reduce(value:nextValue:)","abstract":"<p>A function that combines multiple values into a single value.</p>","parent_name":"ScrollOffsetPreferenceKey"},"Structs/KeyboardShowingEnvironmentKey.html#/s:13ExtendedSwift29KeyboardShowingEnvironmentKeyV12defaultValueSbvpZ":{"name":"defaultValue","abstract":"<p>The default value for the keyboard showing state, which defaults to false.</p>","parent_name":"KeyboardShowingEnvironmentKey"},"Structs/HeightPreferenceKey.html#/s:13ExtendedSwift19HeightPreferenceKeyV12defaultValue14CoreFoundation7CGFloatVvpZ":{"name":"defaultValue","abstract":"<p>The type of value that this preference key holds, which is a CGFloat representing the height.</p>","parent_name":"HeightPreferenceKey"},"Structs/HeightPreferenceKey.html#/s:13ExtendedSwift19HeightPreferenceKeyV6reduce5value9nextValuey14CoreFoundation7CGFloatVz_AIyXEtFZ":{"name":"reduce(value:nextValue:)","abstract":"<p>A function that combines multiple values into a single value.</p>","parent_name":"HeightPreferenceKey"},"Structs/PlaceholderModifier.html#/s:13ExtendedSwift19PlaceholderModifierV04showC0Sbvp":{"name":"showPlaceholder","parent_name":"PlaceholderModifier"},"Structs/PlaceholderModifier.html#/s:13ExtendedSwift19PlaceholderModifierV11placeholderxycvp":{"name":"placeholder","parent_name":"PlaceholderModifier"},"Structs/PlaceholderModifier.html#/s:7SwiftUI12ViewModifierP4body7content4BodyQzAA01_cD8_ContentVyxG_tF":{"name":"body(content:)","parent_name":"PlaceholderModifier"},"Structs/KeyboardVisibility.html#/s:13ExtendedSwift18KeyboardVisibilityV4body7contentQr0B2UI21_ViewModifier_ContentVyACG_tF":{"name":"body(content:)","abstract":"<p>Monitors the keyboard state</p>","parent_name":"KeyboardVisibility"},"Structs/ColorSchemeObserver.html#/s:13ExtendedSwift19ColorSchemeObserverV8onChangeyy0B2UI0cD0Ocvp":{"name":"onChange","parent_name":"ColorSchemeObserver"},"Structs/ColorSchemeObserver.html#/s:7SwiftUI12ViewModifierP4body7content4BodyQzAA01_cD8_ContentVyxG_tF":{"name":"body(content:)","parent_name":"ColorSchemeObserver"},"Structs/ForEachWithIndex.html#/s:13ExtendedSwift16ForEachWithIndexV4dataxvp":{"name":"data","parent_name":"ForEachWithIndex"},"Structs/ForEachWithIndex.html#/s:13ExtendedSwift16ForEachWithIndexV2ids7KeyPathCy7ElementQzq_Gvp":{"name":"id","parent_name":"ForEachWithIndex"},"Structs/ForEachWithIndex.html#/s:13ExtendedSwift16ForEachWithIndexV7contentyq0_0F0Qz_7ElementQztcvp":{"name":"content","parent_name":"ForEachWithIndex"},"Structs/ForEachWithIndex.html#/s:13ExtendedSwift16ForEachWithIndexV_2id7contentACyxq_q0_Gx_s7KeyPathCy7ElementQzq_Gq0_0F0Qz_AJtctcfc":{"name":"init(_:id:content:)","parent_name":"ForEachWithIndex"},"Structs/ForEachWithIndex.html#/s:7SwiftUI4ViewP4body4BodyQzvp":{"name":"body","parent_name":"ForEachWithIndex"},"Structs/ForEachWithIndex.html":{"name":"ForEachWithIndex","abstract":"<p>A view that iterates over a collection and provides both the index and the element to the content closure.</p>"},"Structs/ColorSchemeObserver.html":{"name":"ColorSchemeObserver","abstract":"<p>A view modifier that observes changes in the color scheme and executes a closure when it changes.</p>"},"Structs/KeyboardVisibility.html":{"name":"KeyboardVisibility","abstract":"<p>A view modifier that monitors the keyboard visibility state and provides it to the environment.</p>"},"Structs/PlaceholderModifier.html":{"name":"PlaceholderModifier","abstract":"<p>A view modifier that conditionally displays a placeholder view when a certain condition is met.</p>"},"Structs/HeightPreferenceKey.html":{"name":"HeightPreferenceKey","abstract":"<p>A preference key that stores the height of a view.</p>"},"Structs/KeyboardShowingEnvironmentKey.html":{"name":"KeyboardShowingEnvironmentKey","abstract":"<p>An environment key that indicates whether the keyboard is currently showing.</p>"},"Structs/ScrollOffsetPreferenceKey.html":{"name":"ScrollOffsetPreferenceKey","abstract":"<p>A preference key that stores the scroll offset of a view."},"Functions.html#/s:13ExtendedSwift26authenticateWithBiometrics6reason8callbackySS_ySbctF":{"name":"authenticateWithBiometrics(reason:callback:)","abstract":"<p>Authenticates a user using Biometrics (Face ID or Touch ID)</p>"},"Functions.html#/s:13ExtendedSwift19biometricsAvailableSbyF":{"name":"biometricsAvailable()","abstract":"<p>Gets wether the device has biometrics available</p>"},"Extensions/View.html#/s:7SwiftUI4ViewP08ExtendedA0E22hasBiometricsAvailableSbvp":{"name":"hasBiometricsAvailable","abstract":"<p>Gets wether the device has biometrics available</p>","parent_name":"View"},"Extensions/View.html#/s:7SwiftUI4ViewP08ExtendedA0E9hasFaceIDSbvp":{"name":"hasFaceID","abstract":"<p>Gets wether the deivce has FaceID or not","parent_name":"View"},"Extensions/View.html#/idiom":{"name":"idiom","abstract":"<p>Gets the user interface idiom (iphone or ipad)</p>","parent_name":"View"},"Extensions/View.html#/s:7SwiftUI4ViewP08ExtendedA0E16runningAsPreviewSbvp":{"name":"runningAsPreview","abstract":"<p>Gets wether the app is running in a XCode preview or not</p>","parent_name":"View"},"Extensions/View.html#/s:7SwiftUI4ViewP08ExtendedA0E20isRunningOnSimulatorSbvp":{"name":"isRunningOnSimulator","abstract":"<p>Gets wether the app is running in a sumulator or real device</p>","parent_name":"View"},"Extensions/View.html#/safeArea()":{"name":"safeArea()","abstract":"<p>Gets the safeArea for the view","parent_name":"View"},"Extensions/View.html#/getRect()":{"name":"getRect()","abstract":"<p>Gets the bounds of the window</p>","parent_name":"View"},"Extensions/View.html#/hideKeyboard()":{"name":"hideKeyboard()","abstract":"<p>Hides the keyboard</p>","parent_name":"View"},"Extensions/View.html#/s:7SwiftUI4ViewP08ExtendedA0E34addKeyboardVisibilityToEnvironmentQryF":{"name":"addKeyboardVisibilityToEnvironment()","abstract":"<p>Registers the keyboard visibility in the Environment</p>","parent_name":"View"},"Extensions/View.html#/s:7SwiftUI4ViewP08ExtendedA0E7paddingyQr14CoreFoundation7CGFloatV_AHtF":{"name":"padding(_:_:)","abstract":"<p>Applies a padding to both vertical and horizontal</p>","parent_name":"View"},"Extensions/View.html#/s:7SwiftUI4ViewP08ExtendedA0E2if_7contentAA05TupleC0VyxSg_qd__SgtGSb_qd__xXEtAaBRd__lF":{"name":"if(_:content:)","abstract":"<p>Executes a if statement on render allowing to modify the component</p>","parent_name":"View"},"Extensions/View.html#/s:7SwiftUI4ViewP08ExtendedA0E4exec6actionxSgyyc_tF":{"name":"exec(action:)","abstract":"<p>Executes a action on render, it will run if the view is re-rendered</p>","parent_name":"View"},"Extensions/View.html#/s:7SwiftUI4ViewP08ExtendedA0E6onLoad3runQryyc_tF":{"name":"onLoad(run:)","abstract":"<p>No different than <em>onAppear</em> but helps to decide that is a &ldquo;initial load&rdquo; action</p>","parent_name":"View"},"Extensions/View.html#/s:7SwiftUI4ViewP08ExtendedA0E11placeholder4whenAEQrSb_qd__yctAaBRd__lF":{"name":"placeholder(when:placeholder:)","abstract":"<p>Allows adding a placeholder (text in the middle of the List) to a SwiftUI List</p>","parent_name":"View"},"Extensions/UIImage.html#/scaled(to:)":{"name":"scaled(to:)","abstract":"<p>Scales a <code>UIImage</code> to a size</p>","parent_name":"UIImage"},"Extensions/UIDevice.html#/isRunningOnSimulator":{"name":"isRunningOnSimulator","abstract":"<p>Gets wether the app is running in a sumulator or real device</p>","parent_name":"UIDevice"},"Extensions/UIDevice.html#/isJailBroken":{"name":"isJailBroken","abstract":"<p>Checks if the device is jailbroken</p>","parent_name":"UIDevice"},"Extensions/UIDevice.html#/isFridaDetected":{"name":"isFridaDetected","abstract":"<p>Checks if the device is running Frida</p>","parent_name":"UIDevice"},"Extensions/String.html#/s:SS13ExtendedSwiftE19isValidEmailAddressSbyF":{"name":"isValidEmailAddress()","abstract":"<p>Checks if the email address is valid</p>","parent_name":"String"},"Extensions/String.html#/toUIImage":{"name":"toUIImage","abstract":"<p>If the string is a BASE64 encoded image we get a UIImage?","parent_name":"String"},"Extensions/String.html#/s:SS13ExtendedSwiftE4trimSSyF":{"name":"trim()","abstract":"<p>Trims whitespaces and newlines</p>","parent_name":"String"},"Extensions/String.html#/s:SS13ExtendedSwiftE6sha256SSyF":{"name":"sha256()","abstract":"<p>Returns the SHA256 hash of the current string","parent_name":"String"},"Extensions/String.html#/s:SS13ExtendedSwiftE4hmac9algorithm3keySSAA15CryptoAlgorithmO_SStF":{"name":"hmac(algorithm:key:)","abstract":"<p>Generates a HMAC</p>","parent_name":"String"},"Extensions/String.html#/s:SS13ExtendedSwiftE9localizedyS2SF":{"name":"localized(_:)","abstract":"<p>Localizes a string</p>","parent_name":"String"},"Extensions/Publishers.html#/keyboardHeight":{"name":"keyboardHeight","abstract":"<p>Allows the handling of the Keyboard appeared/disappeared notification</p>","parent_name":"Publishers"},"Extensions/NumberFormatter.html#/s:So17NSNumberFormatterC13ExtendedSwiftE07decimalB0ABvpZ":{"name":"decimalFormatter","abstract":"<p>A NumberFormatter configured for decimal numbers with a maximum of 3 fraction digits.</p>","parent_name":"NumberFormatter"},"Extensions/Notification.html#/keyboardHeight":{"name":"keyboardHeight","abstract":"<p>The height of the keyboard from the notification&rsquo;s userInfo.</p>","parent_name":"Notification"},"Extensions/Int64.html#/s:s5Int64V13ExtendedSwiftE20getDateFromTimestamp11miliseconds10Foundation0E0VSb_tF":{"name":"getDateFromTimestamp(miliseconds:)","abstract":"<p>Converts a timestamp to a Date</p>","parent_name":"Int64"},"Extensions/Int.html#/s:Si13ExtendedSwiftE21formatTimeFromSecondsSSyF":{"name":"formatTimeFromSeconds()","abstract":"<p>Formats a time in seconds into <em>hh:mm:ss</em></p>","parent_name":"Int"},"Extensions/EnvironmentValues.html#/s:7SwiftUI17EnvironmentValuesV08ExtendedA0E15keyboardShowingSbvp":{"name":"keyboardShowing","abstract":"<p>A key to store the keyboard showing state in the environment.</p>","parent_name":"EnvironmentValues"},"Extensions/Date.html#/s:10Foundation4DateV13ExtendedSwiftE15toRfc3339StringSSyF":{"name":"toRfc3339String()","abstract":"<p>Gets the date as a RFC3339 String</p>","parent_name":"Date"},"Extensions/Date.html#/s:10Foundation4DateV13ExtendedSwiftE9timestamp13inMilisecondss5Int64VSb_tF":{"name":"timestamp(inMiliseconds:)","abstract":"<p>Gets the timestamp in seconds or miliseconds</p>","parent_name":"Date"},"Extensions/Date.html#/s:10Foundation4DateV13ExtendedSwiftE5sinceSSyF":{"name":"since()","abstract":"<p>Gets a string for &ldquo;time since&rdquo;","parent_name":"Date"},"Extensions/Date.html#/s:10Foundation4DateV13ExtendedSwiftE7isTodaySbyF":{"name":"isToday()","abstract":"<p>Checks if the <code>Date</code> instance is today</p>","parent_name":"Date"},"Extensions/Date.html#/s:10Foundation4DateV13ExtendedSwiftE11isYesterdaySbyF":{"name":"isYesterday()","abstract":"<p>Checks if the <code>Date</code> instance is yesterday</p>","parent_name":"Date"},"Extensions/Color.html#/s:7SwiftUI5ColorV08ExtendedA0E3hexACSS_tcfc":{"name":"init(hex:)","abstract":"<p>Creates a new SwiftUI color based of a HEX color</p>","parent_name":"Color"},"Extensions/Bool.html#/s:Sb13ExtendedSwiftEySbSScfc":{"name":"init(_:)","abstract":"<p>Initializes a boolean value from a string</p>","parent_name":"Bool"},"Extensions/Bool.html#/s:Sb13ExtendedSwiftE4dataSbSgSo6NSDataC_tcfc":{"name":"init(data:)","abstract":"<p>Initializes a boolean value from NSData</p>","parent_name":"Bool"},"Extensions/Bool.html#/s:Sb13ExtendedSwiftE4dataSo6NSDataCvp":{"name":"data","abstract":"<p>Converts the boolean to NSData</p>","parent_name":"Bool"},"Extensions/Bool.html#/s:Sb13ExtendedSwiftE8toStringSSyF":{"name":"toString()","abstract":"<p>The gets the boolean as a string value</p>","parent_name":"Bool"},"Extensions/Array.html#/s:Sa13ExtendedSwiftE7prependyyxF":{"name":"prepend(_:)","abstract":"<p>Adds a new element to first position of the array","parent_name":"Array"},"Extensions/Array.html#/s:Sa13ExtendedSwiftE4safexSgSi_tcip":{"name":"subscript(safe:)","abstract":"<p>Gets a element based on a index safely, returns null if out of bounds instead of throwing a exception</p>","parent_name":"Array"},"Extensions/Array.html#/s:Sa13ExtendedSwiftE7chunked4intoSaySayxGGSi_tF":{"name":"chunked(into:)","abstract":"<p>Chunks a array into parts</p>","parent_name":"Array"},"Extensions/Array.html":{"name":"Array","abstract":"<p>Extension to the Array class (any type)</p>"},"Extensions/Bool.html":{"name":"Bool","abstract":"<p>Extension to the Bool type</p>"},"Extensions/Color.html":{"name":"Color","abstract":"<p>An extension to the SwiftUI Color</p>"},"Extensions/Date.html":{"name":"Date","abstract":"<p>An extension to the Date class</p>"},"Extensions/EnvironmentValues.html":{"name":"EnvironmentValues","abstract":"<p>A custom environment key to track whether the keyboard is currently showing.</p>"},"Extensions/Int.html":{"name":"Int","abstract":"<p>An extension to the <code>Int</code> type</p>"},"Extensions/Int64.html":{"name":"Int64","abstract":"<p>An extension to the <code>Int64</code> type</p>"},"Extensions/Notification.html":{"name":"Notification","abstract":"<p>An extension to the <code>Notification</code> type</p>"},"Extensions/NumberFormatter.html":{"name":"NumberFormatter","abstract":"<p>A collection of extensions for <code>NumberFormatter</code> to provide commonly used configurations.</p>"},"Extensions/Publishers.html":{"name":"Publishers","abstract":"<p>A collection of Combine publishers that extend functionality</p>"},"Extensions/String.html":{"name":"String","abstract":"<p>A collection of extensions for the String type</p>"},"Extensions/UIDevice.html":{"name":"UIDevice","abstract":"<p>A collection of extensions for the UIDevice type</p>"},"Extensions/UIImage.html":{"name":"UIImage","abstract":"<p>A collection of extensions for the UIImage type</p>"},"Extensions/View.html":{"name":"View","abstract":"<p>A collection of extensions for the View type</p>"},"Enums/CryptoAlgorithm.html#/s:13ExtendedSwift15CryptoAlgorithmO3MD5yA2CmF":{"name":"MD5","parent_name":"CryptoAlgorithm"},"Enums/CryptoAlgorithm.html#/s:13ExtendedSwift15CryptoAlgorithmO4SHA1yA2CmF":{"name":"SHA1","parent_name":"CryptoAlgorithm"},"Enums/CryptoAlgorithm.html#/s:13ExtendedSwift15CryptoAlgorithmO6SHA224yA2CmF":{"name":"SHA224","parent_name":"CryptoAlgorithm"},"Enums/CryptoAlgorithm.html#/s:13ExtendedSwift15CryptoAlgorithmO6SHA256yA2CmF":{"name":"SHA256","parent_name":"CryptoAlgorithm"},"Enums/CryptoAlgorithm.html#/s:13ExtendedSwift15CryptoAlgorithmO6SHA384yA2CmF":{"name":"SHA384","parent_name":"CryptoAlgorithm"},"Enums/CryptoAlgorithm.html#/s:13ExtendedSwift15CryptoAlgorithmO6SHA512yA2CmF":{"name":"SHA512","parent_name":"CryptoAlgorithm"},"Enums/CryptoAlgorithm.html#/s:13ExtendedSwift15CryptoAlgorithmO13HMACAlgorithms6UInt32Vvp":{"name":"HMACAlgorithm","abstract":"<p>Returns the CCHmacAlgorithm associated with the crypto algorithm.</p>","parent_name":"CryptoAlgorithm"},"Enums/CryptoAlgorithm.html#/s:13ExtendedSwift15CryptoAlgorithmO12digestLengthSivp":{"name":"digestLength","abstract":"<p>Returns the length of the digest for the crypto algorithm.</p>","parent_name":"CryptoAlgorithm"},"Enums/CryptoAlgorithm.html":{"name":"CryptoAlgorithm","abstract":"<p>A collection of cryptographic algorithms used for hashing and HMAC operations."},"Classes/Security.html#/s:13ExtendedSwift8SecurityC6sha256yS2SFZ":{"name":"sha256(_:)","abstract":"<p>Hashes a string using SHA256</p>","parent_name":"Security"},"Classes/NetworkMonitor.html#/s:13ExtendedSwift14NetworkMonitorC11isConnectedSbvp":{"name":"isConnected","parent_name":"NetworkMonitor"},"Classes/NetworkMonitor.html#/s:13ExtendedSwift14NetworkMonitorCACycfc":{"name":"init()","parent_name":"NetworkMonitor"},"Classes/KeyboardMonitor.html#/s:13ExtendedSwift15KeyboardMonitorCACycfc":{"name":"init()","parent_name":"KeyboardMonitor"},"Classes/JailbreakStatus.html#/checkJailbreakStatus()":{"name":"checkJailbreakStatus()","abstract":"<p>Checks the jailbreak status of the device and updates the <code>isJailbroken</code> property.</p>","parent_name":"JailbreakStatus"},"Classes/JailbreakStatus.html":{"name":"JailbreakStatus","abstract":"<p>A class that provides a shared instance to check if the device is jailbroken.</p>"},"Classes/KeyboardMonitor.html":{"name":"KeyboardMonitor","abstract":"<p>A class that monitors the keyboard visibility state in iOS applications.</p>"},"Classes/NetworkMonitor.html":{"name":"NetworkMonitor","abstract":"<p>A class that monitors network connectivity status using NWPathMonitor."},"Classes/Security.html":{"name":"Security","abstract":"<p>A utility class for security-related operations</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}